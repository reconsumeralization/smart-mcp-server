{
  "id": "smart-mcp-financial-agent",
  "name": "Smart MCP Financial Agent",
  "description": "An intelligent, context-aware agent that provides comprehensive financial services by managing and executing workflows using the Model Context Protocol (MCP) and interacting with other agents via the Agent-to-Agent (A2A) protocol.",
  "version": "2.0.0",
  "protocol_versions": {
    "mcp": "1.0",
    "a2a": "2.0"
  },
  "endpoints": {
    "agent_discovery": "/a2a/agents",
    "task_submission": "/a2a/tasks",
    "task_status": "/a2a/tasks/:taskId",
    "workflow_management": "/api/workflows",
    "health_check": "/health"
  },
  "capabilities": [
    {
      "name": "financial_portfolio_management",
      "description": "Provides comprehensive portfolio management services, including performance analysis, risk assessment, and rebalancing.",
      "input_schema": {
        "type": "object",
        "properties": {
          "account_id": { "type": "string", "description": "The unique identifier for the client's account." },
          "action": { "type": "string", "enum": ["get_portfolio", "get_performance", "rebalance"], "description": "The specific action to perform." }
        },
        "required": ["account_id", "action"]
      },
      "output_schema": {
        "type": "object",
        "properties": { "success": { "type": "boolean" }, "data": { "type": "object" } }
      }
    },
    {
      "name": "trading_execution",
      "description": "Executes financial trades, manages orders, and provides execution reports.",
      "input_schema": {
        "type": "object",
        "properties": {
          "account_id": { "type": "string", "description": "The account to execute the trade for." },
          "symbol": { "type": "string", "description": "The stock symbol to trade." },
          "side": { "type": "string", "enum": ["buy", "sell"], "description": "The side of the trade." },
          "quantity": { "type": "number", "description": "The number of shares to trade." },
          "order_type": { "type": "string", "enum": ["market", "limit"], "description": "The type of order to place." }
        },
        "required": ["account_id", "symbol", "side", "quantity", "order_type"]
      },
      "output_schema": {
        "type": "object",
        "properties": { "success": { "type": "boolean" }, "order_id": { "type": "string" } }
      }
    },
    {
      "name": "risk_management",
      "description": "Calculates risk metrics, performs stress testing, and monitors compliance.",
      "input_schema": {
        "type": "object",
        "properties": {
          "account_id": { "type": "string", "description": "The account to analyze." },
          "risk_type": { "type": "string", "enum": ["var", "stress_test", "compliance_check"], "description": "The type of risk analysis to perform." }
        },
        "required": ["account_id", "risk_type"]
      },
      "output_schema": {
        "type": "object",
        "properties": { "success": { "type": "boolean" }, "data": { "type": "object" } }
      }
    },
    {
      "name": "workflow_execution",
      "description": "Executes complex, predefined workflows based on natural language task descriptions.",
      "input_schema": {
        "type": "object",
        "properties": {
          "task_description": { "type": "string", "description": "A natural language description of the task to be performed." }
        },
        "required": ["task_description"]
      },
      "output_schema": {
        "type": "object",
        "properties": { "executionId": { "type": "string" }, "statusUrl": { "type": "string" } }
      }
    },
    {
      "name": "communication_sms",
      "description": "Sends SMS messages to recipients.",
      "input_schema": {
        "type": "object",
        "properties": {
          "to": { "type": "string", "description": "The recipient's phone number." },
          "body": { "type": "string", "description": "The message body." }
        },
        "required": ["to", "body"]
      },
      "output_schema": {
        "type": "object",
        "properties": { "success": { "type": "boolean" }, "message": { "type": "string" } }
      }
    },
    {
      "name": "communication_voice",
      "description": "Initiates voice calls.",
      "input_schema": {
        "type": "object",
        "properties": {
          "to": { "type": "string", "description": "The recipient's phone number." },
          "twiml": { "type": "string", "description": "The TwiML to execute for the call." }
        },
        "required": ["to", "twiml"]
      },
      "output_schema": {
        "type": "object",
        "properties": { "success": { "type": "boolean" }, "message": { "type": "string" } }
      }
    },
    {
      "name": "identity_phone_verification",
      "description": "Verifies phone numbers using a verification service.",
      "input_schema": {
        "type": "object",
        "properties": {
          "to": { "type": "string", "description": "The phone number to verify." },
          "channel": { "type": "string", "enum": ["sms", "call"], "description": "The verification channel." }
        },
        "required": ["to", "channel"]
      },
      "output_schema": {
        "type": "object",
        "properties": { "success": { "type": "boolean" }, "message": { "type": "string" } }
      }
    },
    {
      "name": "data_phone_lookup",
      "description": "Retrieves information about a phone number.",
      "input_schema": {
        "type": "object",
        "properties": {
          "phoneNumber": { "type": "string", "description": "The phone number to look up." }
        },
        "required": ["phoneNumber"]
      },
      "output_schema": {
        "type": "object",
        "properties": { "success": { "type": "boolean" }, "message": { "type": "string" }, "data": { "type": "object" } }
      }
    },
    {
      "name": "data_company_enrichment",
      "description": "Enriches company data based on a domain.",
      "input_schema": {
        "type": "object",
        "properties": {
          "domain": { "type": "string", "description": "The company domain." }
        },
        "required": ["domain"]
      },
      "output_schema": {
        "type": "object",
        "properties": { "success": { "type": "boolean" }, "message": { "type": "string" }, "data": { "type": "object" } }
      }
    },
    {
      "name": "data_person_enrichment",
      "description": "Enriches person data based on an email address.",
      "input_schema": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "description": "The person's email address." }
        },
        "required": ["email"]
      },
      "output_schema": {
        "type": "object",
        "properties": { "success": { "type": "boolean" }, "message": { "type": "string" }, "data": { "type": "object" } }
      }
    },
    {
      "name": "data_website_visitor_identification",
      "description": "Identifies an anonymous website visitor based on their IP address.",
      "input_schema": {
        "type": "object",
        "properties": {
          "ip": { "type": "string", "description": "The IP address of the visitor." }
        },
        "required": ["ip"]
      },
      "output_schema": {
        "type": "object",
        "properties": { "success": { "type": "boolean" }, "message": { "type": "string" }, "data": { "type": "object" } }
      }
    },
    {
      "name": "financial_treasury_management",
      "description": "Manages financial accounts, transfers, payments, and balances via Stripe Treasury.",
      "input_schema": {
        "type": "object",
        "properties": {
          "action": { "type": "string", "enum": ["create_account", "retrieve_account", "list_accounts", "create_transfer", "cancel_transfer", "create_payment", "cancel_payment", "retrieve_transaction", "list_transactions", "create_received_credit", "list_received_credits", "create_received_debit", "list_received_debits"], "description": "The specific action to perform." }
        },
        "required": ["action"]
      },
      "output_schema": {
        "type": "object",
        "properties": { "success": { "type": "boolean" }, "data": { "type": "object" } }
      }
    },
    {
      "name": "financial_card_issuing",
      "description": "Creates, manages, and authorizes Stripe Issuing cards and cardholders.",
      "input_schema": {
        "type": "object",
        "properties": {
          "action": { "type": "string", "enum": ["create_card", "retrieve_card", "update_card", "list_cards", "create_cardholder", "retrieve_cardholder", "retrieve_authorization", "list_authorizations", "approve_authorization", "decline_authorization", "create_dispute", "retrieve_dispute", "retrieve_transaction", "list_transactions"], "description": "The specific action to perform." }
        },
        "required": ["action"]
      },
      "output_schema": {
        "type": "object",
        "properties": { "success": { "type": "boolean" }, "data": { "type": "object" } }
      }
    },
    {
      "name": "automation_nla_action",
      "description": "Executes a Zapier Natural Language Action (NLA) based on a natural language prompt.",
      "input_schema": {
        "type": "object",
        "properties": {
          "prompt": { "type": "string", "description": "The natural language prompt for the action." }
        },
        "required": ["prompt"]
      },
      "output_schema": {
        "type": "object",
        "properties": { "success": { "type": "boolean" }, "message": { "type": "string" }, "data": { "type": "object" } }
      }
    }
  ],
  "compliance": {
    "mcp": {
      "version": "1.0",
      "features": ["tool_discovery", "context_management", "error_handling", "streaming_support"]
    },
    "a2a": {
      "version": "2.0",
      "features": ["agent_discovery", "task_delegation", "workflow_coordination", "secure_communication"]
    },
    "security": {
      "authentication": ["jwt", "api-key"],
      "encryption_in_transit": "TLS 1.3",
      "encryption_at_rest": "AES-256"
    }
  },
  "contact": {
    "email": "support@smart-mcp.com"
  },
  "license": "MIT",
  "last_updated": "2025-01-08T10:00:00Z"
}
